{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction QuestionComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"input\", 7);\n    i0.ɵɵlistener(\"change\", function QuestionComponent_div_6_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onAnswerChange(i_r2));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const answer_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", ctx_r0.questionId + i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", ctx_r0.questionId + i_r2)(\"id\", ctx_r0.questionId + i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", answer_r1.textAnswer, \" \");\n  }\n}\nexport class QuestionComponent {\n  constructor() {\n    this.setSelected = new EventEmitter();\n    this._question = {};\n    this._questionId = 0;\n  }\n  set question(question) {\n    this._question = question;\n  }\n  get question() {\n    return this._question;\n  }\n  set questionId(questionId) {\n    this._questionId = questionId;\n  }\n  get questionId() {\n    return this._questionId + \"\";\n  }\n  onAnswerChange(answer) {\n    this.setSelected.emit({\n      questionId: this._questionId,\n      answerId: answer\n    });\n  }\n  static #_ = this.ɵfac = function QuestionComponent_Factory(t) {\n    return new (t || QuestionComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuestionComponent,\n    selectors: [[\"app-question\"]],\n    inputs: {\n      question: \"question\",\n      questionId: \"questionId\"\n    },\n    outputs: {\n      setSelected: \"setSelected\"\n    },\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"list-group\", \"box\"], [1, \"list-group-item\", \"width-group\", \"mx-auto\"], [1, \"text-center\", \"mb-4\"], [1, \"gap-2\"], [\"class\", \"d-grid col-6 mx-auto\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-grid\", \"col-6\", \"mx-auto\"], [\"type\", \"checkbox\", \"autocomplete\", \"off\", 1, \"btn-check\", 3, \"id\", \"change\"], [1, \"btn\", \"btn-outline-primary\", \"mb-2\", 3, \"for\", \"id\"]],\n    template: function QuestionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, QuestionComponent_div_6_Template, 4, 4, \"div\", 5);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.question.textQuestion, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.question.answers);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\".width-group[_ngcontent-%COMP%]{\\n  width: 100%;\\n  min-width: 700px;\\n}\\n\\n.box[_ngcontent-%COMP%]{\\n  border-radius: 10px;\\n  box-shadow: 0 0 10px 2px rgba(100, 100, 100, 0.2);\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVlc3Rpb24vcXVlc3Rpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsaURBQWlEO0FBQ25EIiwic291cmNlc0NvbnRlbnQiOlsiLndpZHRoLWdyb3Vwe1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1pbi13aWR0aDogNzAwcHg7XHJcbn1cclxuXHJcbi5ib3h7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3gtc2hhZG93OiAwIDAgMTBweCAycHggcmdiYSgxMDAsIDEwMCwgMTAwLCAwLjIpO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","QuestionComponent_div_6_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r4","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","onAnswerChange","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ctx_r0","questionId","ɵɵtextInterpolate1","answer_r1","textAnswer","QuestionComponent","constructor","setSelected","_question","_questionId","question","answer","emit","answerId","_","_2","selectors","inputs","outputs","decls","vars","consts","template","QuestionComponent_Template","rf","ctx","ɵɵtemplate","QuestionComponent_div_6_Template","textQuestion","answers"],"sources":["C:\\Users\\arthu\\OneDrive\\Documents\\Work\\Master\\M2\\Web\\Projet\\nwt-project\\front\\src\\app\\question\\question.component.ts","C:\\Users\\arthu\\OneDrive\\Documents\\Work\\Master\\M2\\Web\\Projet\\nwt-project\\front\\src\\app\\question\\question.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Question } from '../types/quiz.type';\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent {\r\n\r\n  private _questionId: number;\r\n  private _question: Question;\r\n  @Output() setSelected = new EventEmitter<{ questionId: number, answerId: number }>();\r\n\r\n  constructor() {\r\n    this._question = {} as Question;\r\n    this._questionId = 0;\r\n  }\r\n\r\n  @Input()\r\n  set question(question: Question) {\r\n    this._question = question;\r\n  }\r\n\r\n  get question(): Question {\r\n    return this._question;\r\n  }\r\n\r\n  @Input()\r\n  set questionId(questionId: number) {\r\n    this._questionId = questionId;\r\n  }\r\n\r\n  get questionId(): string {\r\n    return this._questionId + \"\";\r\n  }\r\n\r\n  onAnswerChange(answer: number) {\r\n    this.setSelected.emit({ questionId: this._questionId, answerId: answer });\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"container\">\r\n\t<div class=\"list-group box\">\r\n\t\t<div class=\"list-group-item width-group mx-auto\">\r\n\t\t\t<h3 class=\"text-center mb-4\">\r\n\t\t\t\t{{ question.textQuestion }}\r\n\t\t\t</h3>\r\n\t\t\t<div class=\"gap-2\">\r\n\t\t\t\t<div class=\"d-grid col-6 mx-auto\" *ngFor=\"let answer of question.answers; let i = index\">\r\n                    <input type=\"checkbox\" class=\"btn-check\" [id]=\"questionId + i\" autocomplete=\"off\" (change)=\"onAnswerChange(i)\">\r\n                    <label class=\"btn btn-outline-primary mb-2\" [for]=\"questionId + i\" [id]=\"questionId + i\">    \r\n                        {{answer.textAnswer}}\r\n                    </label>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>"],"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;;;;;ICOlEC,EAAA,CAAAC,cAAA,aAAyF;IACSD,EAAA,CAAAE,UAAA,oBAAAC,yDAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,IAAA,GAAAH,WAAA,CAAAI,KAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAUV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,cAAA,CAAAL,IAAA,CAAiB;IAAA,EAAC;IAA9GP,EAAA,CAAAa,YAAA,EAA+G;IAC/Gb,EAAA,CAAAC,cAAA,eAAyF;IACrFD,EAAA,CAAAc,MAAA,GACJ;IAAAd,EAAA,CAAAa,YAAA,EAAQ;;;;;;IAHiCb,EAAA,CAAAe,SAAA,GAAqB;IAArBf,EAAA,CAAAgB,UAAA,OAAAC,MAAA,CAAAC,UAAA,GAAAX,IAAA,CAAqB;IAClBP,EAAA,CAAAe,SAAA,GAAsB;IAAtBf,EAAA,CAAAgB,UAAA,QAAAC,MAAA,CAAAC,UAAA,GAAAX,IAAA,CAAsB,OAAAU,MAAA,CAAAC,UAAA,GAAAX,IAAA;IAC9DP,EAAA,CAAAe,SAAA,GACJ;IADIf,EAAA,CAAAmB,kBAAA,MAAAC,SAAA,CAAAC,UAAA,MACJ;;;ADFpB,OAAM,MAAOC,iBAAiB;EAM5BC,YAAA;IAFU,KAAAC,WAAW,GAAG,IAAIzB,YAAY,EAA4C;IAGlF,IAAI,CAAC0B,SAAS,GAAG,EAAc;IAC/B,IAAI,CAACC,WAAW,GAAG,CAAC;EACtB;EAEA,IACIC,QAAQA,CAACA,QAAkB;IAC7B,IAAI,CAACF,SAAS,GAAGE,QAAQ;EAC3B;EAEA,IAAIA,QAAQA,CAAA;IACV,OAAO,IAAI,CAACF,SAAS;EACvB;EAEA,IACIP,UAAUA,CAACA,UAAkB;IAC/B,IAAI,CAACQ,WAAW,GAAGR,UAAU;EAC/B;EAEA,IAAIA,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACQ,WAAW,GAAG,EAAE;EAC9B;EAEAd,cAAcA,CAACgB,MAAc;IAC3B,IAAI,CAACJ,WAAW,CAACK,IAAI,CAAC;MAAEX,UAAU,EAAE,IAAI,CAACQ,WAAW;MAAEI,QAAQ,EAAEF;IAAM,CAAE,CAAC;EAC3E;EAAC,QAAAG,CAAA,G;qBA/BUT,iBAAiB;EAAA;EAAA,QAAAU,EAAA,G;UAAjBV,iBAAiB;IAAAW,SAAA;IAAAC,MAAA;MAAAP,QAAA;MAAAT,UAAA;IAAA;IAAAiB,OAAA;MAAAX,WAAA;IAAA;IAAAY,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT9BzC,EAAA,CAAAC,cAAA,aAAuB;QAInBD,EAAA,CAAAc,MAAA,GACD;QAAAd,EAAA,CAAAa,YAAA,EAAK;QACLb,EAAA,CAAAC,cAAA,aAAmB;QAClBD,EAAA,CAAA2C,UAAA,IAAAC,gCAAA,iBAKM;QACP5C,EAAA,CAAAa,YAAA,EAAM;;;QATLb,EAAA,CAAAe,SAAA,GACD;QADCf,EAAA,CAAAmB,kBAAA,MAAAuB,GAAA,CAAAf,QAAA,CAAAkB,YAAA,MACD;QAEsD7C,EAAA,CAAAe,SAAA,GAAqB;QAArBf,EAAA,CAAAgB,UAAA,YAAA0B,GAAA,CAAAf,QAAA,CAAAmB,OAAA,CAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}