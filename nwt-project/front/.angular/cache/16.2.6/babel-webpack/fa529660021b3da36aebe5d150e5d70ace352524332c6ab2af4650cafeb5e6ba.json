{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./base.service\";\nexport class LoginRegisterService {\n  constructor(_http, _baseService) {\n    this._http = _http;\n    this._baseService = _baseService;\n  }\n  login(user) {\n    return this._http.post(this._baseService.backenURL.login, user, this._baseService.options(false));\n  }\n  register(user) {\n    return this._http.post(this._baseService.backenURL.register, user);\n  }\n  logout() {\n    this._http.post(this._baseService.backenURL.logout, this._baseService.options(true));\n    this._baseService.clearToken();\n  }\n  static #_ = this.ɵfac = function LoginRegisterService_Factory(t) {\n    return new (t || LoginRegisterService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.BaseService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginRegisterService,\n    factory: LoginRegisterService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LoginRegisterService","constructor","_http","_baseService","login","user","post","backenURL","options","register","logout","clearToken","_","i0","ɵɵinject","i1","HttpClient","i2","BaseService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\arthu\\OneDrive\\Documents\\Work\\Master\\M2\\Web\\Projet\\nwt-project\\front\\src\\app\\services\\login-register.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { LoginRegister } from '../types/login-register.type';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginRegisterService {\r\n  constructor(private _http: HttpClient, private _baseService: BaseService) { }\r\n\r\n  login(user: LoginRegister) {\r\n    return this._http.post<LoginRegister>(this._baseService.backenURL.login, user, this._baseService.options(false))\r\n  }\r\n\r\n  register(user: LoginRegister) {\r\n    return this._http.post<LoginRegister>(this._baseService.backenURL.register, user);\r\n  }\r\n\r\n  logout() {\r\n    this._http.post<LoginRegister>(this._baseService.backenURL.logout, this._baseService.options(true));\r\n    this._baseService.clearToken();\r\n  }\r\n\r\n}\r\n"],"mappings":";;;AASA,OAAM,MAAOA,oBAAoB;EAC/BC,YAAoBC,KAAiB,EAAUC,YAAyB;IAApD,KAAAD,KAAK,GAALA,KAAK;IAAsB,KAAAC,YAAY,GAAZA,YAAY;EAAiB;EAE5EC,KAAKA,CAACC,IAAmB;IACvB,OAAO,IAAI,CAACH,KAAK,CAACI,IAAI,CAAgB,IAAI,CAACH,YAAY,CAACI,SAAS,CAACH,KAAK,EAAEC,IAAI,EAAE,IAAI,CAACF,YAAY,CAACK,OAAO,CAAC,KAAK,CAAC,CAAC;EAClH;EAEAC,QAAQA,CAACJ,IAAmB;IAC1B,OAAO,IAAI,CAACH,KAAK,CAACI,IAAI,CAAgB,IAAI,CAACH,YAAY,CAACI,SAAS,CAACE,QAAQ,EAAEJ,IAAI,CAAC;EACnF;EAEAK,MAAMA,CAAA;IACJ,IAAI,CAACR,KAAK,CAACI,IAAI,CAAgB,IAAI,CAACH,YAAY,CAACI,SAAS,CAACG,MAAM,EAAE,IAAI,CAACP,YAAY,CAACK,OAAO,CAAC,IAAI,CAAC,CAAC;IACnG,IAAI,CAACL,YAAY,CAACQ,UAAU,EAAE;EAChC;EAAC,QAAAC,CAAA,G;qBAdUZ,oBAAoB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApBnB,oBAAoB;IAAAoB,OAAA,EAApBpB,oBAAoB,CAAAqB,IAAA;IAAAC,UAAA,EAFnB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}