{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidators } from './custom-validators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/quiz.service\";\nimport * as i2 from \"../services/base.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction CreateQuizComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Le titre est requis. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateQuizComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Le titre doit faire au minimum 2 caractr\\u00E8res. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateQuizComponent_div_7_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function CreateQuizComponent_div_7_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const i_r4 = i0.ɵɵnextContext().index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.deleteQuestion(i_r4));\n    });\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2, \"-\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateQuizComponent_div_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Ce champ ne peut pas \\u00EAtre vide. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateQuizComponent_div_7_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" La question doit faire au minimum 5 caractr\\u00E8res. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateQuizComponent_div_7_div_9_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function CreateQuizComponent_div_7_div_9_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const j_r15 = i0.ɵɵnextContext().index;\n      const i_r4 = i0.ɵɵnextContext().index;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.deleteAnswer(i_r4, j_r15));\n    });\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2, \"-\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateQuizComponent_div_7_div_9_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Ce champ ne peut pas \\u00EAtre vide. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateQuizComponent_div_7_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21);\n    i0.ɵɵtemplate(2, CreateQuizComponent_div_7_div_9_button_2_Template, 3, 0, \"button\", 15);\n    i0.ɵɵelementStart(3, \"input\", 22);\n    i0.ɵɵlistener(\"input\", function CreateQuizComponent_div_7_div_9_Template_input_input_3_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.checkValidation());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 23);\n    i0.ɵɵlistener(\"click\", function CreateQuizComponent_div_7_div_9_Template_input_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const j_r15 = restoredCtx.index;\n      const i_r4 = i0.ɵɵnextContext().index;\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.updateAnswerIsCorrect(i_r4, j_r15));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 24)(6, \"strong\");\n    i0.ɵɵtext(7, \"\\u2713\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(8, CreateQuizComponent_div_7_div_9_div_8_Template, 2, 0, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r15 = ctx.index;\n    const i_r4 = i0.ɵɵnextContext().index;\n    const ctx_r8 = i0.ɵɵnextContext();\n    let tmp_6_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", j_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.answers(i_r4).length > 2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", i_r4 + \"_\" + j_r15 + 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", i_r4 + \"_\" + j_r15 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", i_r4 + \"_\" + j_r15 + 1)(\"id\", i_r4 + \"_\" + j_r15 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx_r8.form.get(\"questions.\" + i_r4 + \".answers.\" + j_r15 + \".textAnswer\")) == null ? null : tmp_6_0.hasError(\"required\"));\n  }\n}\nfunction CreateQuizComponent_div_7_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function CreateQuizComponent_div_7_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const i_r4 = i0.ɵɵnextContext().index;\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.addAnswerToQuestion(i_r4));\n    });\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2, \"+\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateQuizComponent_div_7_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Au moins une r\\u00E9ponse doit \\u00EAtre d\\u00E9finie comme correcte. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateQuizComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"div\", 12)(3, \"h3\", 13)(4, \"input\", 14);\n    i0.ɵɵlistener(\"input\", function CreateQuizComponent_div_7_Template_input_input_4_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.checkValidation());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, CreateQuizComponent_div_7_button_5_Template, 3, 0, \"button\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, CreateQuizComponent_div_7_div_6_Template, 2, 0, \"div\", 4);\n    i0.ɵɵtemplate(7, CreateQuizComponent_div_7_div_7_Template, 2, 0, \"div\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 16);\n    i0.ɵɵtemplate(9, CreateQuizComponent_div_7_div_9_Template, 9, 7, \"div\", 17);\n    i0.ɵɵtemplate(10, CreateQuizComponent_div_7_button_10_Template, 3, 0, \"button\", 18);\n    i0.ɵɵtemplate(11, CreateQuizComponent_div_7_div_11_Template, 2, 0, \"div\", 4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_7_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"id\", i_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.questions().length > 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx_r2.form.get(\"questions.\" + i_r4 + \".textQuestion\")) == null ? null : tmp_3_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx_r2.form.get(\"questions.\" + i_r4 + \".textQuestion\")) == null ? null : tmp_4_0.hasError(\"minlength\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.answers(i_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.answers(i_r4).length < 4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx_r2.form.get(\"questions.\" + i_r4 + \".answers\")) == null ? null : tmp_7_0.hasError(\"atLeastOneCheckboxChecked\"));\n  }\n}\nexport class CreateQuizComponent {\n  constructor(_quizService, _baseService, _router) {\n    this._quizService = _quizService;\n    this._baseService = _baseService;\n    this._router = _router;\n    this._quiz = {};\n    this._isUpdateMode = false;\n    //this._submit$ = new EventEmitter<Quiz>();\n    //this._cancel$ = new EventEmitter<void>();\n    this._form = this._buildForm();\n  }\n  ngOnInit() {\n    if (!this._baseService.isConnected()) {\n      this._router.navigate(['/login']);\n    }\n  }\n  /*\n    @Input()\n    set quiz(quiz: Quiz) {\n      this._quiz = quiz;\n    }\n  */\n  get quiz() {\n    return this._quiz;\n  }\n  get form() {\n    return this._form;\n  }\n  questions() {\n    return this._form.get('questions').controls;\n  }\n  answers(indexQ) {\n    return this._form.get('questions.' + indexQ + '.answers').controls;\n  }\n  get isUpdateMode() {\n    return this._isUpdateMode;\n  }\n  addQuestion() {\n    this.questions().push(this.newQuestion());\n    this.checkValidation();\n  }\n  addAnswerToQuestion(indexQ) {\n    this.answers(indexQ).push(this.newAnswer());\n    this.checkValidation();\n  }\n  deleteAnswer(indexQ, indexA) {\n    this._form.get('questions.' + indexQ + '.answers').removeAt(indexA);\n    this.checkValidation();\n  }\n  deleteQuestion(indexQ) {\n    this._form.get('questions').removeAt(indexQ);\n    this.checkValidation();\n  }\n  updateAnswerIsCorrect(indexQ, indexA) {\n    let b = this.answers(indexQ).at(indexA)?.get('isCorrect')?.value;\n    this.answers(indexQ).at(indexA)?.patchValue({\n      isCorrect: !b\n    });\n    this.checkValidation();\n  }\n  answerHasCorrectAnswer(indexQ) {\n    for (const answer of this.answers(indexQ)) {\n      if (answer.get('isCorrect')?.value === true) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Refresh la validation. Nécessaire car l'ajout de FormGroup/Array ne déclenche pas forcément la validation\n   */\n  checkValidation() {\n    for (let i = 0; i < this.questions().length; i++) {\n      this._form.get('questions.' + i + '.answers').updateValueAndValidity();\n    }\n    this._form.get('questions').updateValueAndValidity();\n  }\n  /**\n   * FormGroup d'une nouvelle question\n   */\n  newQuestion() {\n    return new FormGroup({\n      textQuestion: new FormControl('', Validators.compose([Validators.required, Validators.minLength(5)])),\n      answers: new FormArray([this.newAnswer(), this.newAnswer()], [CustomValidators.arrayContainsAtLeast(2), CustomValidators.atLeastOneCheckboxChecked()])\n    });\n  }\n  /**\n   * FormGroup d'une nouvelle réponse\n   */\n  newAnswer() {\n    return new FormGroup({\n      textAnswer: new FormControl('', Validators.compose([Validators.required, Validators.minLength(1)])),\n      isCorrect: new FormControl(false)\n    });\n  }\n  /**\n   * FormGroup d'un quiz de base\n   */\n  _buildForm() {\n    return new FormGroup({\n      title: new FormControl('', Validators.compose([Validators.required, Validators.minLength(2)])),\n      questions: new FormArray([this.newQuestion()], CustomValidators.arrayContainsAtLeast(1))\n    });\n  }\n  /*\n    @Output('cancel')\n    get cancel$(): EventEmitter<void> {\n      return this._cancel$;\n    }\n  \n    @Output('submit')\n    get submit$(): EventEmitter<Quiz> {\n      return this._submit$;\n    }\n  */\n  ngOnChanges(record) {\n    if (record.quiz && record.quiz.currentValue) {\n      this._quiz = record.quiz.currentValue;\n      this._isUpdateMode = true;\n    } else {\n      this._quiz = {\n        title: '',\n        questions: [{\n          textQuestion: '',\n          answers: [{\n            textAnswer: '',\n            isCorrect: false\n          }, {\n            textAnswer: '',\n            isCorrect: false\n          }]\n        }]\n      };\n      this._isUpdateMode = false;\n    }\n    this._form.patchValue(this._quiz);\n  }\n  /*\n  cancel(): void {\n    this._cancel$.emit();\n  }*/\n  onSubmit() {\n    //this._submit$.emit(quiz);\n    this._quizService.create(this._form.value);\n  }\n  static #_ = this.ɵfac = function CreateQuizComponent_Factory(t) {\n    return new (t || CreateQuizComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.BaseService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateQuizComponent,\n    selectors: [[\"app-create-quiz\"]],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 13,\n    vars: 5,\n    consts: [[1, \"container\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"title\", \"minlength\", \"2\", \"required\", \"\", \"name\", \"title\", \"placeholder\", \"Titre du Quiz\", 1, \"form-control\", \"fs-1\", \"text-center\", 3, \"input\"], [\"class\", \"form-text ps-2\", \"id\", \"basic-addon4\", 4, \"ngIf\"], [\"formArrayName\", \"questions\"], [\"class\", \"list-group width-group box mb-3\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-info\", \"mb-4\", \"d-flex\", \"mx-auto\", \"justify-content-center\", \"align-items-center\", \"big-button\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"d-flex\", \"mx-auto\", \"fs-2\", 3, \"disabled\"], [\"id\", \"basic-addon4\", 1, \"form-text\", \"ps-2\"], [1, \"list-group\", \"width-group\", \"box\", \"mb-3\"], [1, \"list-group-item\", \"width-group\", \"mx-auto\", 3, \"formGroupName\"], [1, \"mb-4\"], [1, \"text-center\", \"input-group\", \"mr-3\"], [\"type\", \"text\", \"formControlName\", \"textQuestion\", \"minlength\", \"5\", \"placeholder\", \"Ecrivez votre question\", \"required\", \"\", 1, \"form-control\", \"fs-2\", 3, \"id\", \"input\"], [\"type\", \"button\", \"class\", \"btn btn-outline-danger\", 3, \"click\", 4, \"ngIf\"], [\"formArrayName\", \"answers\", 1, \"gap-2\"], [\"class\", \"d-grid col-6 mx-auto mb-3\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"class\", \"btn btn-outline-info d-grid mx-auto\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [1, \"d-grid\", \"col-6\", \"mx-auto\", \"mb-3\"], [1, \"input-group\", \"mr-3\", 3, \"formGroupName\"], [\"type\", \"text\", \"minlength\", \"1\", \"formControlName\", \"textAnswer\", \"placeholder\", \"Ecrivez votre r\\u00E9ponse\", \"required\", \"\", 1, \"form-control\", \"fs-3\", 3, \"id\", \"input\"], [\"type\", \"checkbox\", \"autocomplete\", \"off\", \"formControlName\", \"isCorrect\", 1, \"btn-check\", 3, \"id\", \"click\"], [1, \"btn\", \"btn-outline-success\", \"d-flex\", \"justify-content-center\", \"align-items-center\", 3, \"for\", \"id\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-info\", \"d-grid\", \"mx-auto\", 3, \"click\"]],\n    template: function CreateQuizComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateQuizComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"input\", 3);\n        i0.ɵɵlistener(\"input\", function CreateQuizComponent_Template_input_input_3_listener() {\n          return ctx.checkValidation();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, CreateQuizComponent_div_4_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(5, CreateQuizComponent_div_5_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵtemplate(7, CreateQuizComponent_div_7_Template, 12, 8, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function CreateQuizComponent_Template_button_click_8_listener() {\n          return ctx.addQuestion();\n        });\n        i0.ɵɵelementStart(9, \"strong\");\n        i0.ɵɵtext(10, \"+\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵtext(12, \"Cr\\u00E9er le quiz\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.form.get(\"title\")) == null ? null : tmp_1_0.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.form.get(\"title\")) == null ? null : tmp_2_0.hasError(\"minlength\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.questions());\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinLengthValidator, i5.FormGroupDirective, i5.FormControlName, i5.FormGroupName, i5.FormArrayName],\n    styles: [\".width-group[_ngcontent-%COMP%]{\\n    width: 100%;\\n    min-width: 700px;\\n}\\n  \\n.box[_ngcontent-%COMP%]{\\n  border-radius: 10px;\\n  box-shadow: 0 0 10px 2px rgba(100, 100, 100, 0.2);\\n}\\n\\n.btn-outline-info[_ngcontent-%COMP%]:hover {\\n  color: white;\\n}\\n\\n.big-button[_ngcontent-%COMP%] {\\n  width: 50px; \\n  height: 50px; \\n  font-size: 24px; \\n  line-height: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlYXRlLXF1aXovY3JlYXRlLXF1aXouY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxnQkFBZ0I7QUFDcEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsaURBQWlEO0FBQ25EOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlO0VBQ2YsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLndpZHRoLWdyb3Vwe1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4td2lkdGg6IDcwMHB4O1xyXG59XHJcbiAgXHJcbi5ib3h7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3gtc2hhZG93OiAwIDAgMTBweCAycHggcmdiYSgxMDAsIDEwMCwgMTAwLCAwLjIpO1xyXG59XHJcblxyXG4uYnRuLW91dGxpbmUtaW5mbzpob3ZlciB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uYmlnLWJ1dHRvbiB7XHJcbiAgd2lkdGg6IDUwcHg7IFxyXG4gIGhlaWdodDogNTBweDsgXHJcbiAgZm9udC1zaXplOiAyNHB4OyBcclxuICBsaW5lLWhlaWdodDogNTBweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormArray","FormControl","FormGroup","Validators","CustomValidators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CreateQuizComponent_div_7_button_5_Template_button_click_0_listener","ɵɵrestoreView","_r13","i_r4","ɵɵnextContext","index","ctx_r11","ɵɵresetView","deleteQuestion","CreateQuizComponent_div_7_div_9_button_2_Template_button_click_0_listener","_r20","j_r15","ctx_r18","deleteAnswer","ɵɵtemplate","CreateQuizComponent_div_7_div_9_button_2_Template","CreateQuizComponent_div_7_div_9_Template_input_input_3_listener","_r23","ctx_r22","checkValidation","CreateQuizComponent_div_7_div_9_Template_input_click_4_listener","restoredCtx","ctx_r24","updateAnswerIsCorrect","CreateQuizComponent_div_7_div_9_div_8_Template","ɵɵadvance","ɵɵproperty","ctx_r8","answers","length","tmp_6_0","form","get","hasError","CreateQuizComponent_div_7_button_10_Template_button_click_0_listener","_r29","ctx_r27","addAnswerToQuestion","CreateQuizComponent_div_7_Template_input_input_4_listener","_r31","ctx_r30","CreateQuizComponent_div_7_button_5_Template","CreateQuizComponent_div_7_div_6_Template","CreateQuizComponent_div_7_div_7_Template","CreateQuizComponent_div_7_div_9_Template","CreateQuizComponent_div_7_button_10_Template","CreateQuizComponent_div_7_div_11_Template","ctx_r2","questions","tmp_3_0","tmp_4_0","tmp_7_0","CreateQuizComponent","constructor","_quizService","_baseService","_router","_quiz","_isUpdateMode","_form","_buildForm","ngOnInit","isConnected","navigate","quiz","controls","indexQ","isUpdateMode","addQuestion","push","newQuestion","newAnswer","indexA","removeAt","b","at","value","patchValue","isCorrect","answerHasCorrectAnswer","answer","i","updateValueAndValidity","textQuestion","compose","required","minLength","arrayContainsAtLeast","atLeastOneCheckboxChecked","textAnswer","title","ngOnChanges","record","currentValue","onSubmit","create","_","ɵɵdirectiveInject","i1","QuizService","i2","BaseService","i3","Router","_2","selectors","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","CreateQuizComponent_Template","rf","ctx","CreateQuizComponent_Template_form_ngSubmit_1_listener","CreateQuizComponent_Template_input_input_3_listener","CreateQuizComponent_div_4_Template","CreateQuizComponent_div_5_Template","CreateQuizComponent_div_7_Template","CreateQuizComponent_Template_button_click_8_listener","tmp_1_0","tmp_2_0","invalid"],"sources":["C:\\Users\\arthu\\OneDrive\\Documents\\Work\\Master\\M2\\Web\\Projet\\nwt-project\\front\\src\\app\\create-quiz\\create-quiz.component.ts","C:\\Users\\arthu\\OneDrive\\Documents\\Work\\Master\\M2\\Web\\Projet\\nwt-project\\front\\src\\app\\create-quiz\\create-quiz.component.html"],"sourcesContent":["import { Component, OnChanges, OnInit } from '@angular/core';\r\nimport { Quiz } from '../types/quiz.type';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomValidators } from './custom-validators';\r\nimport { QuizService } from '../services/quiz.service';\r\nimport { BaseService } from '../services/base.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-quiz',\r\n  templateUrl: './create-quiz.component.html',\r\n  styleUrls: ['./create-quiz.component.css']\r\n})\r\nexport class CreateQuizComponent implements OnInit, OnChanges {\r\n\r\n  private _isUpdateMode: boolean;\r\n  private _quiz: Quiz;\r\n  //private readonly _cancel$: EventEmitter<void>;\r\n  //private readonly _submit$: EventEmitter<Quiz>;\r\n  private readonly _form: FormGroup;\r\n\r\n  constructor(private _quizService: QuizService, private _baseService: BaseService, private _router: Router) {\r\n    this._quiz = {} as Quiz;\r\n    this._isUpdateMode = false;\r\n    //this._submit$ = new EventEmitter<Quiz>();\r\n    //this._cancel$ = new EventEmitter<void>();\r\n    this._form = this._buildForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this._baseService.isConnected()) {\r\n      this._router.navigate(['/login']);\r\n    }\r\n  }\r\n  /*\r\n    @Input()\r\n    set quiz(quiz: Quiz) {\r\n      this._quiz = quiz;\r\n    }\r\n  */\r\n  get quiz(): Quiz {\r\n    return this._quiz;\r\n  }\r\n\r\n  get form(): FormGroup {\r\n    return this._form;\r\n  }\r\n\r\n  questions() {\r\n    return (this._form.get('questions') as FormArray).controls;\r\n  }\r\n\r\n  answers(indexQ: number) {\r\n    return (this._form.get('questions.' + indexQ + '.answers') as FormArray).controls;\r\n  }\r\n\r\n  get isUpdateMode(): boolean {\r\n    return this._isUpdateMode;\r\n  }\r\n\r\n  addQuestion() {\r\n    this.questions().push(this.newQuestion());\r\n    this.checkValidation();\r\n  }\r\n\r\n  addAnswerToQuestion(indexQ: number) {\r\n    this.answers(indexQ).push(this.newAnswer());\r\n    this.checkValidation();\r\n  }\r\n\r\n  deleteAnswer(indexQ: number, indexA: number) {\r\n    (this._form.get('questions.' + indexQ + '.answers') as FormArray).removeAt(indexA);\r\n    this.checkValidation();\r\n  }\r\n\r\n  deleteQuestion(indexQ: number) {\r\n    (this._form.get('questions') as FormArray).removeAt(indexQ);\r\n    this.checkValidation();\r\n  }\r\n\r\n  updateAnswerIsCorrect(indexQ: number, indexA: number) {\r\n    let b = this.answers(indexQ).at(indexA)?.get('isCorrect')?.value;\r\n    this.answers(indexQ).at(indexA)?.patchValue({ isCorrect: !b });\r\n    this.checkValidation();\r\n  }\r\n\r\n  answerHasCorrectAnswer(indexQ: number): boolean {\r\n    for (const answer of this.answers(indexQ)) {\r\n      if (answer.get('isCorrect')?.value === true) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Refresh la validation. Nécessaire car l'ajout de FormGroup/Array ne déclenche pas forcément la validation\r\n   */\r\n  checkValidation() {\r\n    for (let i = 0; i < this.questions().length; i++) {\r\n      (this._form.get('questions.' + i + '.answers') as FormArray).updateValueAndValidity();\r\n    }\r\n    (this._form.get('questions') as FormArray).updateValueAndValidity();\r\n  }\r\n\r\n  /**\r\n   * FormGroup d'une nouvelle question\r\n   */\r\n  newQuestion(): FormGroup {\r\n    return new FormGroup({\r\n      textQuestion: new FormControl('', Validators.compose([\r\n        Validators.required, Validators.minLength(5)\r\n      ])),\r\n      answers: new FormArray([\r\n        this.newAnswer(),\r\n        this.newAnswer()\r\n      ], [CustomValidators.arrayContainsAtLeast(2), CustomValidators.atLeastOneCheckboxChecked()])\r\n    })\r\n  }\r\n\r\n  /**\r\n   * FormGroup d'une nouvelle réponse\r\n   */\r\n  newAnswer(): FormGroup {\r\n    return new FormGroup({\r\n      textAnswer: new FormControl('', Validators.compose([\r\n        Validators.required, Validators.minLength(1)\r\n      ])),\r\n      isCorrect: new FormControl(false)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * FormGroup d'un quiz de base\r\n   */\r\n  private _buildForm(): FormGroup {\r\n    return new FormGroup({\r\n      title: new FormControl('', Validators.compose([\r\n        Validators.required, Validators.minLength(2)\r\n      ])),\r\n      questions: new FormArray([\r\n        this.newQuestion()\r\n      ], CustomValidators.arrayContainsAtLeast(1))\r\n    });\r\n  }\r\n  /*\r\n    @Output('cancel')\r\n    get cancel$(): EventEmitter<void> {\r\n      return this._cancel$;\r\n    }\r\n  \r\n    @Output('submit')\r\n    get submit$(): EventEmitter<Quiz> {\r\n      return this._submit$;\r\n    }\r\n  */\r\n  ngOnChanges(record: any): void {\r\n    if (record.quiz && record.quiz.currentValue) {\r\n      this._quiz = record.quiz.currentValue;\r\n      this._isUpdateMode = true;\r\n    } else {\r\n      this._quiz = {\r\n        title: '',\r\n        questions: [\r\n          {\r\n            textQuestion: '',\r\n            answers: [\r\n              {\r\n                textAnswer: '',\r\n                isCorrect: false\r\n              },\r\n              {\r\n                textAnswer: '',\r\n                isCorrect: false\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n      this._isUpdateMode = false;\r\n    }\r\n    this._form.patchValue(this._quiz);\r\n  }\r\n\r\n  /*\r\n  cancel(): void {\r\n    this._cancel$.emit();\r\n  }*/\r\n\r\n  onSubmit(): void {\r\n    //this._submit$.emit(quiz);\r\n    this._quizService.create(this._form.value as Quiz);\r\n  }\r\n}","<div class=\"container\">\r\n    <form novalidate [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"mb-3\">\r\n            <input type=\"text\" formControlName=\"title\" minlength=\"2\" required name=\"title\" class=\"form-control fs-1 text-center\" (input)=\"checkValidation()\" placeholder=\"Titre du Quiz\" />\r\n            <div *ngIf=\"form.get('title')?.hasError('required')\" class=\"form-text ps-2\" id=\"basic-addon4\">\r\n                Le titre est requis.\r\n            </div>\r\n            <div *ngIf=\"form.get('title')?.hasError('minlength')\" class=\"form-text ps-2\" id=\"basic-addon4\">\r\n                Le titre doit faire au minimum 2 caractrères.\r\n            </div>\r\n        </div>\r\n        \r\n        <div formArrayName=\"questions\">\r\n            <div class=\"list-group width-group box mb-3\" *ngFor=\"let question of questions(); let i = index\">\r\n                <div class=\"list-group-item width-group mx-auto\" [formGroupName]=\"i\">\r\n                    <div class=\"mb-4\">\r\n                        <h3 class=\"text-center input-group mr-3\">\r\n                            <input type=\"text\" [id]=\"i\" formControlName=\"textQuestion\" minlength=\"5\" class=\"form-control fs-2\" (input)=\"checkValidation()\" placeholder=\"Ecrivez votre question\" required/>\r\n                            <button *ngIf=\"questions().length > 1\" type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteQuestion(i)\"><strong>-</strong></button>\r\n                        </h3>\r\n                        <div *ngIf=\"form.get('questions.' + i + '.textQuestion')?.hasError('required')\" class=\"form-text ps-2\" id=\"basic-addon4\">\r\n                            Ce champ ne peut pas être vide.\r\n                        </div>\r\n                        <div *ngIf=\"form.get('questions.' + i + '.textQuestion')?.hasError('minlength')\" class=\"form-text ps-2\" id=\"basic-addon4\">\r\n                            La question doit faire au minimum 5 caractrères.\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"gap-2\" formArrayName=\"answers\" >\r\n                        <div class=\"d-grid col-6 mx-auto mb-3\" *ngFor=\"let answer of answers(i); let j = index\">\r\n                            <div class=\"input-group  mr-3\" [formGroupName]=\"j\"> \r\n                                <button *ngIf=\"answers(i).length > 2\" type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteAnswer(i,j)\"><strong>-</strong></button>\r\n                                <input type=\"text\" [id]=\"i + '_' + j + 0\" class=\"form-control fs-3\" minlength=\"1\" formControlName=\"textAnswer\" (input)=\"checkValidation()\" placeholder=\"Ecrivez votre réponse\" required >\r\n                                <input type=\"checkbox\" class=\"btn-check\" [id]=\"i + '_' + j + 1\" autocomplete=\"off\" formControlName=\"isCorrect\" (click)=\"updateAnswerIsCorrect(i,j)\">\r\n                                <label class=\"btn btn-outline-success d-flex justify-content-center align-items-center\" [for]=\"i + '_' + j + 1\" [id]=\"i + '_' + j + 1\">    \r\n                                    <strong>✓</strong>\r\n                                </label>\r\n                            </div>\r\n                            <div *ngIf=\"form.get('questions.' + i + '.answers.'+ j + '.textAnswer')?.hasError('required')\" class=\"form-text ps-2\" id=\"basic-addon4\">\r\n                                Ce champ ne peut pas être vide.\r\n                            </div>\r\n                        </div>\r\n                        <button *ngIf=\"answers(i).length < 4\" type=\"button\" class=\"btn btn-outline-info d-grid mx-auto\" (click)=\"addAnswerToQuestion(i)\"><strong>+</strong></button>\r\n                        <div *ngIf=\"form.get('questions.' + i + '.answers')?.hasError('atLeastOneCheckboxChecked')\" class=\"form-text ps-2\" id=\"basic-addon4\">\r\n                            Au moins une réponse doit être définie comme correcte.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-outline-info mb-4 d-flex mx-auto justify-content-center align-items-center big-button\" (click)=\"addQuestion()\"><strong>+</strong></button>\r\n        <button type=\"submit\" class=\"btn btn-primary d-flex mx-auto fs-2\" [disabled]=\"form.invalid\">Créer le quiz</button>\r\n    </form>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}